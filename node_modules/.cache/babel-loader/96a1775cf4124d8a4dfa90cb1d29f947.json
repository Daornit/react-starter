{"ast":null,"code":"var _jsxFileName = \"/home/batorgil/projects/personal/react-starter-theme/src/containers/App/index.js\";\nimport React, { memo, useEffect } from \"react\";\nimport { Redirect, Route, Switch, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport { ConfigProvider } from 'antd';\nimport { IntlProvider } from \"react-intl\";\nimport AppLocale from \"lngProvider\";\nimport MainApp from \"./MainApp\";\n\nconst RestrictedRoute = ({\n  component: Component,\n  location,\n  authUser,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => authUser ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/signin',\n      state: {\n        from: location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}));\n\nconst App = props => {\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n  useEffect(() => {\n    if (location.pathname === '/') {// if (authUser === null) {\n      //   history.push('/signin');\n      // } else if (initURL === '' || initURL === '/' || initURL === '/signin') {\n      //   history.push('/main/dashboard/crypto');\n      // } else {\n      //   history.push(initURL);\n      // }\n    }\n  }, [location, history]);\n  const currentAppLocale = AppLocale['en'];\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    locale: currentAppLocale.antd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    component: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    component: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RestrictedRoute, {\n    path: `${match.url}`,\n    authUser: {},\n    location: location,\n    component: MainApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default memo(App);","map":{"version":3,"sources":["/home/batorgil/projects/personal/react-starter-theme/src/containers/App/index.js"],"names":["React","memo","useEffect","Redirect","Route","Switch","useHistory","useLocation","useRouteMatch","ConfigProvider","IntlProvider","AppLocale","MainApp","RestrictedRoute","component","Component","location","authUser","rest","props","pathname","state","from","App","history","match","currentAppLocale","antd","locale","messages","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,WAA7C,EAA0DC,aAA1D,QAA8E,kBAA9E;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA,QAAjC;AAA2C,KAAGC;AAA9C,CAAD,kBACtB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXF,QAAQ,gBACJ,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADI,gBAEJ,oBAAC,QAAD;AACA,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAE,SADR;AAEFC,MAAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAEN;AAAP;AAFL,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAeA,MAAMO,GAAG,GAAIJ,KAAD,IAAW;AAErB,QAAMH,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMiB,OAAO,GAAGlB,UAAU,EAA1B;AACA,QAAMmB,KAAK,GAAGjB,aAAa,EAA3B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,QAAQ,CAACI,QAAT,KAAsB,GAA1B,EAA+B,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GAVQ,EAUN,CAAEJ,QAAF,EAAYQ,OAAZ,CAVM,CAAT;AAYA,QAAME,gBAAgB,GAAGf,SAAS,CAAC,IAAD,CAAlC;AAEA,sBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEe,gBAAgB,CAACC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAED,gBAAgB,CAACE,MAD3B;AAEE,IAAA,QAAQ,EAAEF,gBAAgB,CAACG,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAG,GAAEJ,KAAK,CAACK,GAAI,EAApC;AAAuC,IAAA,QAAQ,EAAE,EAAjD;AAAqD,IAAA,QAAQ,EAAEd,QAA/D;AACiB,IAAA,SAAS,EAAEJ,OAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,CADF,CADF;AAeD,CAnCD;;AAqCA,eAAeX,IAAI,CAACsB,GAAD,CAAnB","sourcesContent":["import React, {memo, useEffect} from \"react\";\r\nimport {Redirect, Route, Switch, useHistory, useLocation, useRouteMatch} from \"react-router-dom\";\r\nimport { ConfigProvider } from 'antd';\r\nimport {IntlProvider} from \"react-intl\";\r\n\r\nimport AppLocale from \"lngProvider\";\r\nimport MainApp from \"./MainApp\";\r\n\r\nconst RestrictedRoute = ({component: Component, location, authUser, ...rest}) =>\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      authUser\r\n        ? <Component {...props} />\r\n        : <Redirect\r\n          to={{\r\n            pathname: '/signin',\r\n            state: {from: location}\r\n          }}\r\n        />}\r\n  />;\r\n\r\n\r\nconst App = (props) => {\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/') {\r\n      // if (authUser === null) {\r\n      //   history.push('/signin');\r\n      // } else if (initURL === '' || initURL === '/' || initURL === '/signin') {\r\n      //   history.push('/main/dashboard/crypto');\r\n      // } else {\r\n      //   history.push(initURL);\r\n      // }\r\n    }\r\n  }, [ location, history]);\r\n\r\n  const currentAppLocale = AppLocale['en'];\r\n\r\n  return (\r\n    <ConfigProvider locale={currentAppLocale.antd}>\r\n      <IntlProvider\r\n        locale={currentAppLocale.locale}\r\n        messages={currentAppLocale.messages}>\r\n\r\n        <Switch>\r\n          <Route exact path='/signin' component={null}/>\r\n          <Route exact path='/signup' component={null}/>\r\n          <RestrictedRoute path={`${match.url}`} authUser={{}} location={location}\r\n                           component={MainApp}/>\r\n        </Switch>\r\n      </IntlProvider>\r\n    </ConfigProvider>\r\n  )\r\n};\r\n\r\nexport default memo(App);\r\n"]},"metadata":{},"sourceType":"module"}