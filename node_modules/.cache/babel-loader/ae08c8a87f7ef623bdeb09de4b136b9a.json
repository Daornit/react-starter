{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst createBrowserHistory = require('history').createBrowserHistory;\n\nexport const history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [routeMiddleware];\nexport default function configureStore(preloadedState) {\n  const store = createStore(createRootReducer(history), // root reducer with router state\n  preloadedState, composeWithDevTools(applyMiddleware(routerMiddleware(history), // for dispatching history actions\n  ...middlewares)));\n  return store;\n}","map":{"version":3,"sources":["/home/batorgil/projects/personal/react-starter-theme/src/appRedux/store/index.js"],"names":["applyMiddleware","createStore","routerMiddleware","createRootReducer","composeWithDevTools","createBrowserHistory","require","history","routeMiddleware","middlewares","configureStore","preloadedState","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,gBAAR,QAA+B,wBAA/B;AACA,OAAOC,iBAAP,MAA8B,aAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,oBAAhD;;AAGA,OAAO,MAAME,OAAO,GAAGF,oBAAoB,EAApC;AAEP,MAAMG,eAAe,GAAGN,gBAAgB,CAACK,OAAD,CAAxC;AAEA,MAAME,WAAW,GAAG,CAACD,eAAD,CAApB;AAGA,eAAe,SAASE,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,QAAMC,KAAK,GAAGX,WAAW,CACvBE,iBAAiB,CAACI,OAAD,CADM,EACK;AAC5BI,EAAAA,cAFuB,EAGvBP,mBAAmB,CACjBJ,eAAe,CACbE,gBAAgB,CAACK,OAAD,CADH,EACc;AAC3B,KAAGE,WAFU,CADE,CAHI,CAAzB;AAWA,SAAOG,KAAP;AACD","sourcesContent":["import {applyMiddleware, createStore} from 'redux'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport createRootReducer from '../reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst createBrowserHistory = require('history').createBrowserHistory;\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst routeMiddleware = routerMiddleware(history);\r\n\r\nconst middlewares = [routeMiddleware];\r\n\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const store = createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState,\r\n    composeWithDevTools(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        ...middlewares\r\n      ),\r\n    ),\r\n    \r\n  );\r\n  return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}